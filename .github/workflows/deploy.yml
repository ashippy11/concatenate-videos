name: Deploy to AWS EC2 with ECR

on:
  push:
    branches:
    - main  # This triggers the pipeline on push to the main branch

jobs:

  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.3.0'  # Specify the version you need

    # Cache Terraform providers and modules
    - name: Cache Terraform modules
      uses: actions/cache@v2
      with:
        path: ~/.terraform
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Apply Terraform
    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1  # Set to your desired AWS region

  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Login to AWS ECR
    - name: Login to Amazon ECR
      run: |
        aws --version
        echo ${{ secrets.AWS_ACCESS_KEY_ID }} | docker login --username AWS --password-stdin <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com

    - name: Build and push Docker image to ECR
      run: |
        docker build -t NODE_ENV=production your-app-name .
        docker tag your-app-name:latest <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com/your-repository-name:production-${{ github.sha }}
        docker push <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com/your-repository-name:latest

    - name: SSH and deploy to EC2
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}      # EC2 Public IP
        username: ${{ secrets.EC2_USER }}  # EC2 username (e.g., ec2-user, ubuntu)
        key: ${{ secrets.EC2_PRIVATE_KEY }} # Your private SSH key stored in GitHub secrets
        script: |
          # Stop and remove Docker container 
          docker stop concatenate-vidoes || true
          docker rm concatenate-vidoes || true
          # Pull the image from ECR and run
          docker pull <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com/concatenate_video_service:production-${{ github.sha }}
          docker run -d -v /mnt/job_data:/mnt/job_data \
            --log-driver=awslogs \
            --log-opt awslogs-group=/ec2/concatenate-video-service \
            --log-opt awslogs-stream=${{ secrets.EC2_HOST }}   \
            --name concatenate_video_service -p 80:8000 <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com/concatenate_video_service:production-${{ github.sha }}
